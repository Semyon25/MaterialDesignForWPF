<UserControl x:Class="MaterialWpfApplication.View.Dialogs"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MaterialWpfApplication.View"
             mc:Ignorable="d" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:system="clr-namespace:System;assembly=mscorlib">

    <UserControl.Resources>
        <ResourceDictionary>
            <DataTemplate DataType="{x:Type system:DateTime}">
                <StackPanel Margin="16">
                    <TextBlock>England win the World Cup:</TextBlock>
                    <TextBlock Margin="0 8 0 0" Text="{Binding }" />
                    <TextBlock Margin="0 8 0 0" >You will never see that again.</TextBlock>
                    <Button  Margin="0 8 0 0" IsDefault="True" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Style="{DynamicResource MaterialDesignFlatButton}">AWESOME</Button>
                </StackPanel>
            </DataTemplate>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <materialDesign:DialogHost Identifier="RootDialog">
        <materialDesign:DrawerHost>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBlock TextWrapping="Wrap" Margin="32">Dialogs are supported via the DialogHost control which was designed to work with MVVM/binding, code-behind, routed commands, and a pure code-based API.</TextBlock>

                <ScrollViewer HorizontalScrollBarVisibility="Auto" Grid.Row="1">
                    <Grid VerticalAlignment="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="320" />
                            <ColumnDefinition Width="320" />
                            <ColumnDefinition Width="320" />
                            <ColumnDefinition Width="320" />
                        </Grid.ColumnDefinitions>

                        <!--#region SAMPLE 1-->
                        <TextBlock TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Top"
                                   Margin="8 0 8 0"
                        >ОБРАЗЕЦ 1: Локализованное диалоговое инкапсулирование определенного содержимого, запущенного из маршрутизируемой команды, ответ, обработанный с помощью кода.</TextBlock>
                        <materialDesign:DialogHost DialogClosing="Sample1_DialogHost_OnDialogClosing"
                                                   Grid.Column="0" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <materialDesign:DialogHost.DialogContent>
                                <StackPanel Margin="16">
                                    <TextBlock>Add a new fruit.</TextBlock>
                                    <TextBox Margin="0 8 0 0" HorizontalAlignment="Stretch" x:Name="FruitTextBox" />
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
                                        <Button Style="{StaticResource MaterialDesignFlatButton}"
                                                IsDefault="True"
                                                Margin="0 8 8 0"
                                                Command="materialDesign:DialogHost.CloseDialogCommand">
                                            <Button.CommandParameter>
                                                <system:Boolean>True</system:Boolean>
                                            </Button.CommandParameter>
                                            ACCEPT
                                        </Button>
                                        <Button Style="{StaticResource MaterialDesignFlatButton}"
                                                IsCancel="True"
                                                Margin="0 8 8 0"
                                                Command="materialDesign:DialogHost.CloseDialogCommand">
                                            <Button.CommandParameter>
                                                <system:Boolean>False</system:Boolean>
                                            </Button.CommandParameter>
                                            CANCEL
                                        </Button>
                                    </StackPanel>
                                </StackPanel>
                            </materialDesign:DialogHost.DialogContent>
                            <Border BorderThickness="1" BorderBrush="{DynamicResource PrimaryHueMidBrush}"
                                    MinWidth="256" MinHeight="256" ClipToBounds="True">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ListBox x:Name="FruitListBox">
                                        <ListBoxItem>Apple</ListBoxItem>
                                        <ListBoxItem>Banana</ListBoxItem>
                                        <ListBoxItem>Pear</ListBoxItem>
                                    </ListBox>
                                    <materialDesign:ColorZone Mode="PrimaryMid" Grid.Row="1" Effect="{DynamicResource MaterialDesignShadowDepth5}">
                                        <TextBlock Margin="16">Fruit Bowl</TextBlock>
                                    </materialDesign:ColorZone>
                                    <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"                                
                                            Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                                            VerticalAlignment="Bottom" HorizontalAlignment="Right" 
                                            Grid.Row="0" Margin="0 0 28 -20">
                                        <Viewbox Width="22" Height="22">
                                            <Canvas Width="24" Height="24">
                                                <materialDesign:PackIcon Kind="Plus" Height="24" Width="24"/>
                                            </Canvas>
                                        </Viewbox>
                                    </Button>
                                </Grid>
                            </Border>
                        </materialDesign:DialogHost>
                        <!--#endregion -->

                        <!--#region SAMPLE 2-->
                        <TextBlock Grid.Column="1" Grid.Row="0" TextWrapping="Wrap" VerticalAlignment="Top" Margin="8 0 8 0">ОБРАЗЕЦ 2: Диалог верхнего уровня с использованием OpenDialog, передача содержимого через параметр. Вы можете передать модель представления, если в области корневого диалога DialogHost можно найти соответствующий DataTemplate.</TextBlock>
                        <StackPanel Grid.Column="1" Grid.Row="1" VerticalAlignment="Center">
                            <!--the request to open the dialog will bubble up to the top-most DialogHost, but we can used the attached property based event to handle the response -->
                            <Button Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                                    materialDesign:DialogHost.DialogClosingAttached="Sample2_DialogHost_OnDialogClosing"
                                    Width="128">
                                <Button.CommandParameter>
                                    <StackPanel Margin="16">
                                        <ProgressBar Style="{DynamicResource MaterialDesignCircularProgressBar}" HorizontalAlignment="Center" Margin="16" IsIndeterminate="True" Value="0" />
                                        <Button Style="{StaticResource MaterialDesignFlatButton}" IsCancel="True" 
                                                Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                                                CommandParameter="Sample2Cancel"
                                                HorizontalAlignment="Center">CANCEL</Button>
                                    </StackPanel>
                                </Button.CommandParameter>
                                PASS VIEW
                            </Button>
                            <Button Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                                    Width="128" Margin="0 32 0 0" Content="PASS MODEL">
                                <Button.CommandParameter>
                                    <system:DateTime>1966-JUL-30</system:DateTime>
                                </Button.CommandParameter>
                            </Button>
                        </StackPanel>
                        <!--#endregion-->

                        <!--#region SAMPLE 3-->
                        <TextBlock Grid.Column="2" Grid.Row="0" TextWrapping="Wrap" VerticalAlignment="Top" Margin="8 0 8 0">ОБРАЗЕЦ 3: Откройте и прослушайте диалог полностью из кода в модели просмотра.</TextBlock>
                        <!-- Executes a command on DialogsViewModel.cs, which will launch the dialog from code -->
                        <StackPanel Grid.Column="2" Grid.Row="1" >
                            <Button Command="{Binding RunDialogCommand}"
                                    Width="128">
                                RUN CODE
                            </Button>
                            <Button Command="{Binding RunExtendedDialogCommand}"
                                    Width="128" Margin="0 32 0 0">
                                EXTENDED
                            </Button>
                        </StackPanel>
                        <!--#endregion-->


                        <!--#region SAMPLE 4-->
                        <TextBlock TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Top"
                                   Grid.Column="3" Margin="8 0 8 0"
                        >ОБРАЗЕЦ 4: Диалог, управляемый из модели представления с использованием IsOpen и пользовательских команд (игнорирование предоставленных маршрутизируемых команд).</TextBlock>
                        <materialDesign:DialogHost Grid.Column="3" Grid.Row="1"  HorizontalAlignment="Center" VerticalAlignment="Center"
                                                   IsOpen="{Binding IsSample4DialogOpen}"
                                                   DialogContent="{Binding Sample4Content}"
                                                   CloseOnClickAway="True">
                            <Border BorderThickness="1" BorderBrush="{DynamicResource PrimaryHueMidBrush}"
                                    MinWidth="256" MinHeight="256" ClipToBounds="True">
                                <Button HorizontalAlignment="Center" VerticalAlignment="Center"
                                        Command="{Binding OpenSample4DialogCommand}"
                                >RUN</Button>
                            </Border>
                        </materialDesign:DialogHost>
                        <!--#endregion-->
                    </Grid>
                </ScrollViewer>
            </Grid>

        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>

</UserControl>
