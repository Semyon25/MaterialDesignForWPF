<UserControl x:Class="MaterialWpfApplication.View.Snackbars"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MaterialWpfApplication.View"
             mc:Ignorable="d" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Hidden">
        <Grid Margin="0 0 0 4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="340" />
                <ColumnDefinition Width="340" />
                <ColumnDefinition Width="340" />
                <ColumnDefinition Width="340" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <!-- example 1 -->
            <Border Background="{DynamicResource MaterialDesignSelection}" 
                    Padding="8 0 8 0">
                <Grid>
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock TextWrapping="WrapWithOverflow" Style="{DynamicResource MaterialDesignSubheadingTextBlock}">Example 1.</TextBlock>
                        <TextBlock TextWrapping="WrapWithOverflow" >Простое определение в XAML. Используйте переключатель, чтобы отобразить сообщение.</TextBlock>
                        <ToggleButton IsChecked="{Binding ElementName=SnackbarOne, Path=IsActive, Mode=TwoWay}"
                                      Margin="0 8 0 0"/>
                    </StackPanel>


                    <!-- simplest form -->
                    <materialDesign:Snackbar Message="hello 1" 
                                             IsActive="False"
                                             x:Name="SnackbarOne" />
                </Grid>
            </Border>

            <!-- example 2 -->
            <Border Background="{DynamicResource MaterialDesignPaper}" 
                    Padding="8 0 8 0"
                    Grid.Column="1">
                <Grid>
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock TextWrapping="WrapWithOverflow" Style="{DynamicResource MaterialDesignSubheadingTextBlock}">Example 2.</TextBlock>
                        <TextBlock TextWrapping="WrapWithOverflow" >Просмотрите источник, чтобы увидеть сообщение, определенное в длинной руке, позволяя установить содержимое кнопки действия.</TextBlock>
                        <ToggleButton IsChecked="{Binding ElementName=SnackbarTwo, Path=IsActive, Mode=TwoWay}"
                                      Margin="0 8 0 0" />
                    </StackPanel>

                    <!-- long hand form for setting the message -->
                    <materialDesign:Snackbar IsActive="False"
                                             x:Name="SnackbarTwo" >
                        <materialDesign:SnackbarMessage Content="Hello 2" ActionContent="UNDO" />
                    </materialDesign:Snackbar>
                </Grid>
            </Border>

            <!-- example 3 -->
            <!--
                    * using a message queue to manage queuing of messages, and getting onto correct thread
                    * notice the shorthand syntax {materialDesign:MessageQueue} for creating a new message 
                    queue without expanded XAML. useful in code-behind scenarios if you dont want to bind 
                    a message queue in to the snackbar.
                -->
            <Border Background="{DynamicResource MaterialDesignSelection}" 
                    Padding="8 0 8 0"                
                    Grid.Column="2">
                <Grid>
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock TextWrapping="WrapWithOverflow" Style="{DynamicResource MaterialDesignSubheadingTextBlock}">Example 3.</TextBlock>
                        <TextBlock TextWrapping="WrapWithOverflow">Во многих сценариях реального мира отображение уведомлений должно касаться потоков, очередей и потенциально значительного использования. MessageQueue можно настроить для обработки большей части этого для вас, воспользовавшись следующими преимуществами:</TextBlock>
                        <TextBlock TextWrapping="WrapWithOverflow" Margin="0 8 0 0" Text=" • Сообщения могут быть поставлены в очередь из любого потока"/>
                        <TextBlock TextWrapping="WrapWithOverflow" Text=" • Сообщение будет автоматически скрываться после периода ожидания"/>
                        <TextBlock TextWrapping="WrapWithOverflow" Text=" • Уведомление не будет таймаутом, если мышь над ним"/>
                        <TextBlock TextWrapping="WrapWithOverflow" Text=" • Может быть сопряжен с DialogHost, поэтому тайм-аут приостанавливается, если активный диалог"/>
                        <TextBlock TextWrapping="WrapWithOverflow" Text=" • Дубликат в течение короткого периода времени будет отброшен"/>
                        <TextBlock TextWrapping="WrapWithOverflow" Text=" • Одну очередь сообщений можно разделить на несколько окон"/>
                        <TextBlock TextWrapping="WrapWithOverflow" Text=" • Работает с кодом и MVVM"/>
                        <Grid Margin="0 16 0 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="MessageTextBox" VerticalAlignment="Top"
                                     Grid.Column="0">Hello World</TextBox>
                            <Button Click="SnackBar3_OnClick" Margin="16 0 0 0"
                                    Grid.Column="1">Send</Button>
                        </Grid>


                    </StackPanel>
                    <materialDesign:Snackbar MessageQueue="{materialDesign:MessageQueue}"
                                             x:Name="SnackbarThree" />
                </Grid>
            </Border>

            <!-- example 4 -->
            <!-- illustrates queueing uses some action command call backs -->
            <Border Background="{DynamicResource MaterialDesignPaper}" 
                    Padding="8 0 8 0"                
                    Grid.Column="3">
                <Grid>
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock TextWrapping="WrapWithOverflow" Style="{DynamicResource MaterialDesignSubheadingTextBlock}">Example 4.</TextBlock>
                        <TextBlock TextWrapping="WrapWithOverflow">Иллюстрирует очередность (включая отбрасывание дубликатов) и обработку команд. Выполните уведомление, чтобы увидеть ответ System.Trace ..</TextBlock>
                        <Grid Margin="0 16 0 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBox AcceptsReturn="True" x:Name="ExampleFourTextBox" TextWrapping="Wrap"
                                     Text="Message One&#x0d;&#x0a;Message Two&#x0d;&#x0a;Message Three&#x0d;&#x0a;Duplicate&#x0d;&#x0a;Duplicate&#x0d;&#x0a;Duplicate&#x0d;&#x0a;Start Fresh&#x0d;&#x0a;Goodbye" />
                            <Button Click="SnackBar4_OnClick" HorizontalAlignment="Center" Grid.Column="1">Send</Button>
                        </Grid>
                    </StackPanel>
                    <materialDesign:Snackbar MessageQueue="{materialDesign:MessageQueue}"
                                             x:Name="SnackbarFour" />
                </Grid>
            </Border>

            <!-- example 5 -->
            <!-- full width snack bar -->
            <Border Background="{DynamicResource MaterialDesignChipBackground}" 
                    Grid.ColumnSpan="2"
                    Grid.Row="1">
                <StackPanel VerticalAlignment="Bottom">
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center"
                                Margin="0 0 0 32">
                        <TextBlock TextWrapping="WrapWithOverflow" Style="{DynamicResource MaterialDesignSubheadingTextBlock}">Example 5.</TextBlock>
                        <TextBlock TextWrapping="WrapWithOverflow">Обозначает полную ширину snackbar.</TextBlock>
                        <ToggleButton IsChecked="{Binding ElementName=SnackbarFive, Path=IsActive, Mode=TwoWay}"
                                      Margin="0 8 0 0" />
                    </StackPanel>
                    <materialDesign:Snackbar HorizontalAlignment="Stretch"
                                             x:Name="SnackbarFive">
                        <materialDesign:SnackbarMessage Content="This Snackbar is stretched horizontally. Consider allowing your content to push up."                                                    
                                                        ActionContent="OK" />
                    </materialDesign:Snackbar>
                </StackPanel>
            </Border>

            <!-- example 6 -->
            <!-- colour variations -->
            <Border Grid.Column="2" Grid.Row="1">
                <Border.Resources>
                    <ResourceDictionary>
                        <ResourceDictionary.MergedDictionaries>
                            <!-- here is where you can get additional snackbar button styles from -->
                            <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Snackbar.xaml" />
                        </ResourceDictionary.MergedDictionaries>
                    </ResourceDictionary>
                </Border.Resources>
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock TextWrapping="WrapWithOverflow" Style="{StaticResource MaterialDesignSubheadingTextBlock}">Example 6.</TextBlock>
                    <TextBlock TextWrapping="WrapWithOverflow">Варианты цветовых вариаций кнопок.</TextBlock>
                    <materialDesign:Snackbar Margin="0 8 0 0" IsActive="True">
                        <materialDesign:SnackbarMessage Content="Default - accent"                                                    
                                                        ActionContent="ACCENT" />
                    </materialDesign:Snackbar>
                    <materialDesign:Snackbar Margin="0 8 0 0"
                                             IsActive="True"
                                             ActionButtonStyle="{StaticResource MaterialDesignSnackbarActionLightButton}">
                        <materialDesign:SnackbarMessage Content="Primary Light"                                                    
                                                        ActionContent="LIGHT" />
                    </materialDesign:Snackbar>
                    <materialDesign:Snackbar Margin="0 8 0 0"
                                             IsActive="True"
                                             ActionButtonStyle="{StaticResource MaterialDesignSnackbarActionMidButton}">
                        <materialDesign:SnackbarMessage Content="Primary Mid"                                                    
                                                        ActionContent="MID" />
                    </materialDesign:Snackbar>
                    <materialDesign:Snackbar Margin="0 8 0 0"
                                             IsActive="True"
                                             ActionButtonStyle="{StaticResource MaterialDesignSnackbarActionDarkButton}">
                        <materialDesign:SnackbarMessage Content="Primary Dark"                                                    
                                                        ActionContent="DARK" />
                    </materialDesign:Snackbar>
                </StackPanel>
            </Border>
        </Grid>
    </ScrollViewer>

</UserControl>